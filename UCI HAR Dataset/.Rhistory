with(totalEmisionsYear,plot(year,totalEm,
xlab="year",ylab="Total PM2.5 Emission",main="Total PM2.5 Emission per year",
lty="l"))
with(totalEmisionsYear,plot(year,totalEm,
xlab="year",ylab="Total PM2.5 Emission",main="Total PM2.5 Emission per year",
type="l",pch=19))
with(totalEmisionsYear,plot(year,totalEm,
xlab="year",ylab="Total PM2.5 Emission",main="Total PM2.5 Emission per year",
type="l",pch=1))
with(totalEmisionsYear,plot(year,totalEm,
xlab="year",ylab="Total PM2.5 Emission",main="Total PM2.5 Emission per year",
pch=19))#type="l",
with(totalEmisionsYear,plot(year,totalEm,
xlab="year",ylab="Total PM2.5 Emission",main="Total PM2.5 Emission per year",
pch=19,type="l"))#type="l",
with(totalEmisionsYear,plot(year,totalEm,
xlab="year",ylab="Total PM2.5 Emission",main="Total PM2.5 Emission per year",
pch=19,lty="l"))#type="l",
with(totalEmisionsYear,plot(year,totalEm,
xlab="year",ylab="Total PM2.5 Emission",main="Total PM2.5 Emission per year",
pch=19,lty="l"))#type="l",
with(totalEmisionsYear,plot(year,totalEm,
xlab="year",ylab="Total PM2.5 Emission",main="Total PM2.5 Emission per year",
pch=19))#type="l",
with(totalEmisionsYear,plot(year,totalEm,
xlab="year",ylab="Total PM2.5 Emission",main="Total PM2.5 Emission per year",
pch=19,type"l"))#type="l",
with(totalEmisionsYear,plot(year,totalEm,
xlab="year",ylab="Total PM2.5 Emission",main="Total PM2.5 Emission per year",
pch=19,type="l"))#type="l",
with(totalEmisionsYear,plot(year,totalEm,
xlab="year",ylab="Total PM2.5 Emission",main="Total PM2.5 Emission per year",
pch=19,type="o"))#type="l",
with(totalEmisionsYear,plot(year,totalEm,
xlab="year",ylab="Total PM2.5 Emission",main="Total PM2.5 Emission per year",
pch=22,type="o"))#type="l",
png('plot1.png')
with(totalEmisionsYear,plot(year,totalEm,
xlab="year",ylab="Total PM2.5 Emission",main="Total PM2.5 Emission per year",
pch=22,type="o"))
dev.off()
totalEmisionsBalt <- NEI %>% filter(fips=="24510") %>%
group_by(year) %>% summarize(totalEm=sum(Emissions))
with(totalEmisionsBalt,plot(year,totalEm,
xlab="Year",ylab="Total PM2.5 Emission",main="Total PM2.5 Emissions per year in Baltimore City, Mariland",
pch=22,type="o"))
with(totalEmisionsBalt,plot(as.factor(year),totalEm,
xlab="Year",ylab="Total PM2.5 Emission",main="Total PM2.5 Emissions per year in Baltimore City, Mariland",
pch=22,type="o"))
with(totalEmisionsBalt,barplot(as.factor(year),totalEm,
xlab="Year",ylab="Total PM2.5 Emission",main="Total PM2.5 Emissions per year in Baltimore City, Mariland",
pch=22,type="o"))
with(totalEmisionsBalt,barplot(as.factor(year),height=totalEm,
xlab="Year",ylab="Total PM2.5 Emission",main="Total PM2.5 Emissions per year in Baltimore City, Mariland",
pch=22,type="o"))
with(totalEmisionsBalt,barplot(as.factor(year),height=totalEm,
xlab="Year",ylab="Total PM2.5 Emission",
main="Total PM2.5 Emissions per year in Baltimore City, Mariland",))
with(totalEmisionsBalt,barplot(year,height=totalEm,
xlab="Year",ylab="Total PM2.5 Emission",
main="Total PM2.5 Emissions per year in Baltimore City, Mariland"))
with(totalEmisionsBalt,barplot(as.factor(year),height=totalEm,
xlab="Year",ylab="Total PM2.5 Emission",
main="Total PM2.5 Emissions per year in Baltimore City, Mariland"))
with(totalEmisionsBalt,barplot(as.factor(year),height=totalEm,
xlab="Year",ylab="Total PM2.5 Emission",
main="Total PM2.5 Emissions per year in Baltimore City, Mariland"))
with(totalEmisionsBalt,barplot(names=as.factor(year),height=totalEm,
xlab="Year",ylab="Total PM2.5 Emission",
main="Total PM2.5 Emissions per year in Baltimore City, Mariland"))
png('plot1.png')
with(totalEmisionsYear,barplot(names=as.factor(year),height=totalEm,
xlab="Year",ylab="Total PM2.5 Emission",
main="Total PM2.5 Emissions per year"))
dev.off()
with(totalEmisionsYear,barplot(names=as.factor(year),height=totalEm,
xlab="Year",ylab="Total PM2.5 Emission",
main="Total PM2.5 Emissions per year"))
png('plot2.png')
with(totalEmisionsBalt,barplot(names=as.factor(year),height=totalEm,
xlab="Year",ylab="Total PM2.5 Emission",
main="Total PM2.5 Emissions per year in Baltimore City, Mariland"))
dev.off()
library(ggplot2)
balt<-filter(NEI,fips=="24510")
head(balt)
baltYearType<-balt %>% group_by(type,year) %>% summarize(totalEm=sum(Emissions))
g <- ggplot(baltYearType, aes(year, Emissions, color = type))
g <- g + geom_line() +
xlab("year") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle('Total Emissions in Baltimore City, Maryland (fips == "24510") from 1999 to 2008')
print(g)
g <- ggplot(baltYearType, aes(year, totalEm, color = type))
g <- g + geom_line() +
xlab("year") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle('Total Emissions in Baltimore City, Maryland (fips == "24510") from 1999 to 2008')
print(g)
g <- ggplot(baltYearType, aes(year, totalEm, color = type))
g <- g + bar_plot() +
xlab("Year") +
ylab(expression("Total PM2.5 Emissions")) +
ggtitle("Total Emissions in Baltimore City, Maryland from 1999 to 2008')
print(g)
ggtitle("Total Emissions in Baltimore City, Maryland from 1999 to 2008")
print(g)
g <- ggplot(baltYearType, aes(year, totalEm, color = type))
g <- g + bar_plot() +
xlab("Year") +
ylab(expression("Total PM2.5 Emissions")) +
ggtitle("Total Emissions in Baltimore City, Maryland from 1999 to 2008")
print(g)
g <- ggplot(baltYearType, aes(year, totalEm, color = type))
g <- g + bar_plot() +
xlab("Year") +
ylab(expression("Total PM2.5 Emissions")) +
ggtitle("Total Emissions in Baltimore City, Maryland from 1999 to 2008")
print(g)
g<-ggplot(baltYearType, aes(year, totalEm, color = type))
g<-g + geom_line()+geom_plot()+
xlab("Year")+
ylab(expression("Total PM2.5 Emissions"))+
ggtitle("Total Emissions in Baltimore City, Maryland from 1999 to 2008")
print(g)
g<-ggplot(baltYearType, aes(year, totalEm, color = type))
g<-g + geom_line()+geom_point()+
xlab("Year")+
ylab(expression("Total PM2.5 Emissions"))+
ggtitle("Total Emissions in Baltimore City, Maryland from 1999 to 2008")
print(g)
dpng("plot3.png")
g<-ggplot(baltYearType, aes(year, totalEm, color = type))
g<-g + geom_line()+geom_point()+
xlab("Year")+
ylab(expression("Total PM2.5 Emissions"))+
ggtitle("Total Emissions in Baltimore City, Maryland from 1999 to 2008")
print(g)
dev.off()
png("plot3.png")
g<-ggplot(baltYearType, aes(year, totalEm, color = type))
g<-g + geom_line()+geom_point()+
xlab("Year")+
ylab(expression("Total PM2.5 Emissions"))+
ggtitle("Total Emissions in Baltimore City, Maryland from 1999 to 2008")
print(g)
dev.off()
head(NEI)
head(SCC)
str(SCC)
NEISCC<-merge(NEI, SCC, by="SCC")
rm("balt")
rm(totalEmisionsYear)
NEISCC<-merge(NEI, SCC, by="SCC")
rm(bname)
rm(pop100Name)
NEISCC<-merge(NEI, SCC, by="SCC")
NEI2<-select(NEI,SCC,Short.Name)
head(NEI)
NEI2<-select(SCC,SCC,Short.Name)
SCC<-select(SCC,SCC,Short.Name)
rm(NEI2)
rm(SCC)
NEISCC<-merge(NEI, SCC, by="SCC")
SCC <- readRDS("Source_Classification_Code.rds")
SCC2<-select(SCC,SCC,Short.Name)
NEISCC<-merge(NEI, SCC, by="SCC")
rm(SCC)
NEISCC<-merge(NEI, SCC, by="SCC")
NEISCC<-merge(NEI, SCC2, by="SCC")
NEI<-select(NEI,SCC,year,Emissions)
NEISCC<-merge(NEI, SCC2, by="SCC")
rm(list=ls())
setwd("C:/Users/Patricia/Desktop/proj_explanalysis/")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
SCC<-select(SCC,SCC,Short.Name)
NEI<-select(NEI,SCC,year,Emissions)
NEISCC<-merge(NEI, SCC, by="SCC")
SCC<-SCC[1:2000]
SCC<-SCC[1:2000,]
NEI<-NEI[1:10000,]
NEISCC<-merge(NEI, SCC, by="SCC")
coal<-grepl("coal", NEISCC$Short.Name, ignore.case=TRUE)
subsetNEISCC<-NEISCC[coal, ]
totalCoalYear<-coal %>% group_by(year) %>% summarize(totalEm=sum(Emissions))
head(subsetNEISCC)
library(dplyr)
totalCoalYear<-coal %>% group_by(year) %>% summarize(totalEm=sum(Emissions))
totalCoalYear<-coalNEISCC %>% group_by(year) %>% summarize(totalEm=sum(Emissions))
coalNEISCC<-NEISCC[coal, ]
totalCoalYear<-coalNEISCC %>% group_by(year) %>% summarize(totalEm=sum(Emissions))
g<-ggplot(totalCoalYear, aes(factor(year), Emissions))
g<-g+geom_bar(stat="identity")+
xlab("year")+
ylab(expression("Total PM2.5 Emissions"))+
ggtitle("Total Emissions from Coal sources from 1999 to 2008")
print(g)
g<-ggplot(totalCoalYear, aes(factor(year), totalEM))
g<-g+geom_bar(stat="identity")+
xlab("year")+
ylab("Total PM2.5 Emissions")+
ggtitle("Total Emissions from Coal sources from 1999 to 2008")
print(g)
totalCoalYear<-coalNEISCC %>% group_by(year) %>% summarize(totalEm=sum(Emissions))
png("plot4.png")
g<-ggplot(totalCoalYear, aes(factor(year), totalEM))
g<-g+geom_bar(stat="identity")+
xlab("year")+
ylab("Total PM2.5 Emissions")+
ggtitle("Total Emissions from Coal sources from 1999 to 2008")
dev.off()
print(g)
totalCoalYear
NEI <- readRDS("summarySCC_PM25.rds")
motorBalt<-filter(NEI,fips=="24510",type=="ON-ROAD")
motorBaltTotal<-motorBalt %>% group_by(year) %>% summarize(totelEM=sum(Emissions))
g <- ggplot(motorBaltTotal, aes(factor(year), Emissions))
g <- g + geom_bar(stat="identity") +
xlab("Year") +
ylab(expression("Total PM2.5 Emissions")) +
ggtitle("Total Emissions from motor vehicle in Baltimore City, Maryland from 1999 to 2008")
print(g)
head(motorBaltTotal)
g <- ggplot(motorBaltTotal, aes(factor(year), totalEm))
g <- g + geom_bar(stat="identity") +
xlab("Year") +
ylab(expression("Total PM2.5 Emissions")) +
ggtitle("Total Emissions from motor vehicle in Baltimore City, Maryland from 1999 to 2008")
print(g)
motorBaltTotal<-motorBalt %>% group_by(year) %>% summarize(totelEm=sum(Emissions))
png("plot5.png")
g <- ggplot(motorBaltTotal, aes(factor(year), totalEm))
g <- g + geom_bar(stat="identity") +
xlab("Year") +
ylab(expression("Total PM2.5 Emissions")) +
ggtitle("Total Emissions from motor vehicle in Baltimore City, Maryland from 1999 to 2008")
print(g)
motorBaltTotal
motorBaltTotal<-motorBalt %>% group_by(year) %>% summarize(totalEm=sum(Emissions))
g <- ggplot(motorBaltTotal, aes(factor(year), totalEm))
g <- g + geom_bar(stat="identity") +
xlab("Year") +
ylab(expression("Total PM2.5 Emissions")) +
ggtitle("Total Emissions from motor vehicle in Baltimore City, Maryland from 1999 to 2008")
print(g)
png("plot5.png")
g <- ggplot(motorBaltTotal, aes(factor(year), totalEm))
g <- g + geom_bar(stat="identity") +
xlab("Year") +
ylab(expression("Total PM2.5 Emissions")) +
ggtitle("Total Emissions from motor vehicle in Baltimore City, Maryland from 1999 to 2008")
print(g)
dev.off()
dev.off()
dev.off()
dev.off()
g <- ggplot(motorBaltTotal, aes(factor(year), totalEm))
g <- g + geom_bar(stat="identity") +
xlab("Year") +
ylab(expression("Total PM2.5 Emissions")) +
ggtitle("Total Emissions from motor vehicle in Baltimore City, Maryland from 1999 to 2008")
print(g)
png("plot5.png")
g <- ggplot(motorBaltTotal, aes(factor(year), totalEm))
g <- g + geom_bar(stat="identity") +
xlab("Year") +
ylab(expression("Total PM2.5 Emissions")) +
ggtitle("Total Emissions from motor vehicle in Baltimore City, Maryland from 1999 to 2008")
print(g)
dev.off()
compNEI<-filter(NEI,fips=="24510"|"06037",type=="ON-ROAD")
compNEI<-filter(NEI,fips%in%c("24510","06037"),type=="ON-ROAD")
compNEITotal<-compNEI %>% group_by(year,fips) %>% summarize(totalEm=sum(Emissions))
g <- ggplot(compNEITotal, aes(factor(year), Emissions))
g <- g + facet_grid(. ~ fips)
print(g)
g <- ggplot(compNEITotal, aes(factor(year), totalEm))
g <- g + facet_grid(. ~ fips)
g <- g + geom_bar(stat="identity")  +
xlab("year") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle('Total Emissions from motor vehicle (type=ON-ROAD) in Baltimore City, MD (fips = "24510") vs Los Angeles, CA (fips = "06037")  1999-2008')
print(g)
compNEITotal<-compNEI %>% group_by(year,fips) %>% summarize(totalEm=sum(Emissions))
compNEITotal$fips[compNEITotal$fips=="24510"]<-"Baltimore, MD"
compNEITotal$fips[compNEITotal$fips=="06037"]<-"Los Angeles, CA"
g <- ggplot(compNEITotal, aes(factor(year), totalEm))
g <- g + facet_grid(. ~ fips})
g <- g + geom_bar(stat="identity")  +
xlab("Year") +
ylab(expression("Total PM2.5 Emissions")) +
ylab(expression("Total PM2.5 Emissions")) +
ggtitle("Total Emissions from motor vehicle in Baltimore City, MD vs Los Angeles, CA")
print(g)
g <- ggplot(compNEITotal, aes(factor(year), totalEm))
g <- g + facet_grid(. ~ fips)
g <- g + geom_bar(stat="identity")  +
xlab("Year") +
ylab(expression("Total PM2.5 Emissions")) +
ggtitle("Total Emissions from motor vehicle in Baltimore City, MD vs Los Angeles, CA")
print(g)
png("plot6.png")
g <- ggplot(compNEITotal, aes(factor(year), totalEm))
g <- g + facet_grid(. ~ fips)
g <- g + geom_bar(stat="identity")  +
xlab("Year") +
ylab(expression("Total PM2.5 Emissions")) +
ggtitle("Total Emissions from motor vehicle in Baltimore City, MD vs Los Angeles, CA")
print(g)
dev.off()
rm(list=ls())
library(dplyr)
setwd("C:/Users/Patricia/Desktop/proj_explanalysis/")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
NEI<-select(NEI,SCC,year,Emissions)
coal<-grepl("coal", SCC$Short.Name, ignore.case=TRUE)
SCC<-SCC[coal,c("SCC","Short.Name")]
head(SCC)
NEISCC<-merge(NEI, SCC, by="SCC")
g<-ggplot(totalCoalYear, aes(factor(year), totalEM))
totalCoalYear<-coalNEISCC %>% group_by(year) %>% summarize(totalEm=sum(Emissions))
totalCoalYear<-NEISCC %>% group_by(year) %>% summarize(totalEm=sum(Emissions))
g<-ggplot(totalCoalYear, aes(factor(year), totalEM))
g<-g+geom_bar(stat="identity")+
xlab("Year")+
ylab("Total PM2.5 Emissions")+
ggtitle("Total Emissions from Coal sources from 1999 to 2008")
print(g)
g<-ggplot(totalCoalYear, aes(factor(year), totalEm))
g<-g+geom_bar(stat="identity")+
xlab("Year")+
ylab("Total PM2.5 Emissions")+
ggtitle("Total Emissions from Coal sources from 1999 to 2008")
print(g)
png("plot4.png")
g<-ggplot(totalCoalYear, aes(factor(year), totalEm))
g<-g+geom_bar(stat="identity")+
xlab("Year")+
ylab("Total PM2.5 Emissions")+
ggtitle("Total Emissions from Coal sources from 1999 to 2008")
print(g)
dev.off()
rm(list=ls())
library(dplyr)
setwd("C:/Users/Patricia/Desktop/proj_cleaningdata/UCI HAR Dataset")
x_train <- read.table("train/X_train.txt")
y_train <- read.table("train/y_train.txt")
subject_train <- read.table("train/subject_train.txt")
x_test <- read.table("test/X_test.txt")
y_test <- read.table("test/y_test.txt")
subject_test <- read.table("test/subject_test.txt")
x_data <- rbind(x_train, x_test)
# create Y data set
y_data <- rbind(y_train, y_test)
subject_data <- rbind(subject_train, subject_test)
xdt <- rbind(x_train, x_test)
# create Y data set
ydt <- rbind(y_train, y_test)
# create SUBJECT data set
subdt <- rbind(subject_train, subject_test)
feataures
features <- read.table("features.txt")
features
mean_and_std_features <- grep(".*mean.*|.*std.*", features$V2)
meanstd_features <- grep(".*mean.*|.*std.*", features$V2)
xdt <- xdt[, meanstd_features]
head(xdt)
names(xdt) <- features[meanstd_features, 2]
xdt
head(xdt)
names(xdt)
meanFreq
?meanFreq
head(ydt)
activities
activity
activity <- read.table("activity_labels.txt")
activity
ydt[, 1] <- activities[ydt[, 1], 2]
names(ydt) <- "activity"
head(subdt)
names(subdt) <- "subject"
all_data <- cbind(xdt, ydt, subdt)
# bind all the data in a single data set
head(all_datt)
head(all_data)
names(all_data)
averages_data <- alldt %>% group_by(subject,activity) %>%
summarise_each(funs(mean))
alldt <- cbind(xdt, ydt, subdt)
averages_data <- alldt %>% group_by(subject,activity) %>%
summarise_each(funs(mean))
head(averages_data)
library(dplyr)
rm(list=ls())
library(dplyr)
setwd("C:/Users/Patricia/Desktop/proj_cleaningdata/UCI HAR Dataset")
# 1. Merge the training and test sets to create one data set
x_train <- read.table("train/X_train.txt")
y_train <- read.table("train/y_train.txt")
subject_train <- read.table("train/subject_train.txt")
x_test <- read.table("test/X_test.txt")
y_test <- read.table("test/y_test.txt")
subject_test <- read.table("test/subject_test.txt")
# create X data set
xdt <- rbind(x_train, x_test)
# create Y data set
ydt <- rbind(y_train, y_test)
# create SUBJECT data set
subdt <- rbind(subject_train, subject_test)
# 2. Extract only the measurements on the mean and standard deviation for each measurement
feat <- read.table("features.txt")
# get only columns with mean or std in their names
meanstd_feat <- grep(".*mean.*|.*std.*", feat$V2)
# subset the desired columns
xdt <- xdt[, meanstd_feat]
# correct the column names
names(xdt) <- features[meanstd_feat, 2]
# 3. Use descriptive activity names to name the activities in the data set
act <- read.table("activity_labels.txt")
# update values with correct activity names
ydt[, 1] <- act[ydt[, 1], 2]
# correct column name
names(ydt) <- "activity"
# 4. Appropriately label the data set with descriptive variable names
# correct column name
names(subdt) <- "subject"
# bind all the data in a single data set
alldt <- cbind(xdt, ydt, subdt)
# 5. Create a second, independent tidy data set with the average of each variable
# for each activity and each subject
# 66 <- 68 columns but last two (activity & subject)
tidydt <- alldt %>% group_by(subject,activity) %>%
summarise_each(funs(mean))
write.table(tidydt, "tidy_data",row.name=T)
write.table(tidydt, "tidy_data.txt",row.name=T)
head(tidydt)
rm(list=ls())
library(dplyr)
setwd("C:/Users/Patricia/Desktop/proj_cleaningdata/UCI HAR Dataset")
x_train <- read.table("train/X_train.txt")
subject_train <- read.table("train/subject_train.txt")
y_train <- read.table("train/y_train.txt")
x_test <- read.table("test/X_test.txt")
y_test <- read.table("test/y_test.txt")
subject_test <- read.table("test/subject_test.txt")
# create X data set
xdt <- rbind(x_train, x_test)
# create Y data set
ydt <- rbind(y_train, y_test)
# create SUBJECT data set
subdt <- rbind(subject_train, subject_test)
feat <- read.table("features.txt")
meanstd_feat <- grep(".*mean.*|.*std.*", feat$V2)
xdt <- xdt[, meanstd_feat]
names(xdt) <- features[meanstd_feat, 2]
names(xdt) <- feat[meanstd_feat, 2]
act <- read.table("activity_labels.txt")
ydt[, 1] <- act[ydt[, 1], 2]
names(ydt) <- "activity"
names(subdt) <- "subject"
alldt <- cbind(xdt, ydt, subdt)
tidydt <- alldt %>% group_by(subject,activity) %>%
summarise_each(funs(mean))
write.table(tidydt, "tidy_data.txt",row.name=T)
head(tidydt)
write.table(alldt, "merged_data.txt",row.name=T)
names(tidydt)
names(tidydt)[3:80]
factor(tidy$activity)
factor(tidydt$activity)
x_train <- read.table("train/X_train.txt")
subject_train <- read.table("train/subject_train.txt")
y_train <- read.table("train/y_train.txt")
x_test <- read.table("test/X_test.txt")
y_test <- read.table("test/y_test.txt")
subject_test <- read.table("test/subject_test.txt")
# create X data set
xdt <- rbind(x_train, x_test)
# create Y data set
ydt <- rbind(y_train, y_test)
# create SUBJECT data set
subdt <- rbind(subject_train, subject_test)
## 2. Extract only the measurements on the mean and standard deviation for each measurement
# get features names
feat <- read.table("features.txt")
# get only columns with mean or std in their names
meanstd_feat <- grep(".*mean.*|.*std.*", feat$V2)
xdt <- xdt[, meanstd_feat]
# rename columns
names(xdt) <- feat[meanstd_feat, 2]
## 3. Use descriptive activity names to name the activities in the data set
# get activity names
act <- read.table("activity_labels.txt")
# add activity names
ydt[, 1] <- act[ydt[, 1], 2]
# change column name
names(ydt) <- "activity"
## 4. Appropriately label the data set with descriptive variable names
# change column name
names(subdt) <- "subject"
# create a single data set with all the data
alldt <- cbind(xdt, ydt, subdt)
# 5. Create a second, independent tidy data set with the average of each variable
# for each activity and each subject
# average by activity and subject
tidydt <- alldt %>% group_by(subject,activity) %>%
summarise_each(funs(mean))
# save data set
write.table(tidydt, "tidy_data.txt",row.name=F)
